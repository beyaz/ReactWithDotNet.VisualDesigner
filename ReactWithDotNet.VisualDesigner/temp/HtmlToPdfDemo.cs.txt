using System;
using System.Collections.Generic;
using System.IO;
using BOA.Pdf;

namespace BOA.Types.Card.CCO;

static class HtmlToPdfDemo
{
    static LineCollection CalculateLines(AnyContract m, IReadOnlyList<AnyRecord> records)
    {
        return new LineCollection
        {
           
        };
    }

    public static bool ExportToFile()
    {
        var contract = new AnyContract
        {
          
            ExpiryDateWithoutDayName      = "30.09.2025",
            CustomerNameAndSurname        = "Ahmet Yılmaz",
            FullAddress                   = "İstanbul, Kadıköy, Bahariye Caddesi No:10",
            CustomerNo                    = "1234567890",
            CardNumberHidden              = "**** **** **** 1234",
            RemainCreditLimitInland       = "15.000 TL",
            MilesSmilesCardSegment        = "Elite Plus",
            CreateDateWithoutDayNameRepl  = "01.09.2025",
            ExpiryDateWithoutDayNameRepl  = "30.09.2025",
            ExtractDeptAmountInland       = "2.500 TL",
            MinPaymentAmount              = "500 TL",
            RemainInstallmentAmount       = "1.200 TL",
            NextCreateDateWithDayNameRepl = "Pazartesi, 01.10.2025",
            NextExpiryDateWithDayNameRepl = "Çarşamba, 31.10.2025",
            MainCardTKMemberId            = "TK123456789",
            TotalMilScore                 = "25.000",
            TotalShoppingMilScore         = "15.000",
            TotalOtherMilScore            = "10.000",
            DelayPenalty                  = "150 TL",
            MonthlyProfitRate             = "%2.25",
            GeneralContractProfitRate     = "%1.95"

        };

        var records = new List<AnyRecord>
        {
            new()
            {
                Date   = "01.01.2025",
                Amount = "1.1"
            },
            
            new ()
            {
                Date   = "02.02.2025",
                Amount = "2.2"
            },
            new ()
            {
                Date   = "03.03.2025",
                Amount = "3.3"
            }
        };

        var lines = CalculateLines(contract, records);

        var html = string.Join(Environment.NewLine, lines);

        const string pdfPath = @"d:\PdfDemo.pdf";
        if (File.Exists(pdfPath))
        {
            File.Delete(pdfPath);
        }

        // html = File.ReadAllText(@"D:\work\git\ReactWithDotNet.VisualDesigner\ReactWithDotNet.VisualDesigner\temp\hesapOzeti.html");

        {
            MemoryStream pdf = new MemoryStream();
            PdfParameters parameters = new PdfParameters();
            
            if (PdfHelper.CreateFromHtml(html, pdf, parameters))
            {
                var fileContent = pdf.ToArray();
                
                File.WriteAllBytes(pdfPath, fileContent);
            }
            
            pdf.Dispose();

            return true;
        }
        
        
        //return PdfHelper.CreatePdfFromHtml(html, pdfPath);
    }

    
    class LineCollection : List<string>
    {
        public void Add(IEnumerable<LineCollection> lineCollections)
        {
            foreach (var collection in lineCollections)
            {
                AddRange(collection);
            }
        }
    }
    
    
    class AnyContract
    {
        public string ExpiryDateWithoutDayName{ get; set; }
        public string CustomerNameAndSurname                { get; set; }
        public string FullAddress                           { get; set; }
        public string CustomerNo                            { get; set; }
        public string CardNumberHidden                      { get; set; }
        public string RemainCreditLimitInland               { get; set; }
        public string MilesSmilesCardSegment                { get; set; }
        public string CreateDateWithoutDayNameRepl          { get; set; }
        public string ExpiryDateWithoutDayNameRepl          { get; set; }
        public string ExtractDeptAmountInland               { get; set; }
        public string MinPaymentAmount                      { get; set; }
        public string RemainInstallmentAmount               { get; set; }
        public string NextCreateDateWithDayNameRepl         { get; set; }
        public string NextExpiryDateWithDayNameRepl         { get; set; }
        public string MainCardTKMemberId                    { get; set; }
        public string TotalMilScore                         { get; set; }
        public string TotalShoppingMilScore                 { get; set; }
        public string TotalOtherMilScore                    { get; set; }
        public string DelayPenalty                          { get; set; }
        public string MonthlyProfitRate                     { get; set; }
        public string GeneralContractProfitRate             { get; set; }
        public string CreditLimitInland             { get; set; }
    }
    
    class AnyRecord
    {
        public string Date { get; set; }
        
        public string Amount { get; set; }
    }
       
}